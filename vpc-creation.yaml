- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: importing variables for VPC
      include_vars: vars/VPC_setup
    
    - name: Creating VPC with values from variables file
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_hostnames: yes
        dns_support: yes
        tenancy: default
        state: "{{state}}"
      register: vpc_out

    - name: Creating public subnet-1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        cidr: "{{PubSub1Cidr}}"
        state: present
        tags:
          Name: publicSubnet-1
      register: publicSubnet1_out

    - name: Creating public subnet-2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        cidr: "{{PubSub2Cidr}}"
        state: present
        tags:
          Name: publicSubnet-2
      register: publicSubnet2_out

    - name: Creating public subnet-3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        cidr: "{{PubSub3Cidr}}"
        state: present
        tags:
          Name: publicSubnet-3
      register: publicSubnet3_out

    - name: Creating private subnet-1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        cidr: "{{PrivSub1Cidr}}"
        state: present
        tags:
          Name: privateSubnet-1
      register: privateSubnet1_out

    - name: Creating private subnet-2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        cidr: "{{PrivSub2Cidr}}"
        state: present
        tags:
          Name: privateSubnet-2
      register: privateSubnet2_out

    - name: Creating private subnet-3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        cidr: "{{PrivSub3Cidr}}"
        state: present
        tags:
          Name: privateSubnet-3
      register: privateSubnet3_out

    - name: Creating internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: present
        tags:
          Name: Srinivasan-IGW
      register: igw

    - name: Routing public subnets with IGW
      ec2_vpc_route_table:
          vpc_id: "{{vpc_out.vpc.id}}"
          region: "{{region}}"
          tags:
            Name: PublicRouteTable
          subnets:
            - "{{ publicSubnet1_out.subnet.id }}"
            - "{{ publicSubnet2_out.subnet.id }}"
            - "{{ publicSubnet3_out.subnet.id }}"
          routes:
            - dest: 0.0.0.0/0
              gateway_id: "{{ igw.gateway_id }}"
      register: publicRT

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{publicSubnet1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATgateway_out
      
    - name: Routing private subnets with NAT Gateway
      ec2_vpc_route_table:
          vpc_id: "{{vpc_out.vpc.id}}"
          region: "{{region}}"
          tags:
            Name: PrivateRouteTable
          subnets:
            - "{{ privateSubnet1_out.subnet.id }}"
            - "{{ privateSubnet2_out.subnet.id }}"
            - "{{ privateSubnet3_out.subnet.id }}"
          routes:
            - dest: 0.0.0.0/0
              gateway_id: "{{ NATgateway_out.nat_gateway_id }}"
      register: privateRT
      
    - name: printing the ID of all network components
      debug:
        var: "{{item}}"
      loop: 
        - vpc_out.vpc.id
        - igw.gateway_id
        - NATgateway_out.nat_gateway_id
        - publicSubnet1_out.subnet.id
        - publicSubnet2_out.subnet.id
        - publicSubnet3_out.subnet.id 
        - privateSubnet1_out.subnet.id
        - privateSubnet2_out.subnet.id
        - privateSubnet3_out.subnet.id

    - name: storing ID's in a file 
      copy:
        content: "vpc.id: {{vpc_out.vpc.id}}\n IGW.id: {{igw.gateway_id}}\n NAT-Gateway.id: {{NATgateway_out.nat_gateway_id}}"
        dest: vars/output-ids


      